{"ast":null,"code":"var _jsxFileName = \"/home/dragana/Desktop/Primeri/react/quote-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst texts = ['Text 1', 'Text 2', 'Text 3', 'Text 4'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [] //this.handleClick= this.handleClick.bind(this);\n\n    };\n  } // handleClick = () => {\n  //   this.setState({ quotes: texts[2] });\n  // }\n\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      this.setState({\n        quotes: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const clickedText = this.state.clickedText;\n    return React.createElement(\"div\", {\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"blockquote text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-quote-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"mb-0\",\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\"), React.createElement(\"footer\", {\n      className: \"blockquote-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Someone famous in \", React.createElement(\"cite\", {\n      title: \"Source Title\",\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, clickedText))), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"btn btn-info\",\n      href: \"twitter.com/intent/tweet\",\n      id: \"tweet-quote\",\n      title: \"Tweet this quote!\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      className: \"btn btn-info\",\n      id: \"tumblr-quote\",\n      title: \"Post this quote on tumblr!\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-tumblr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info\",\n      id: \"new-quote\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"New quote\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dragana/Desktop/Primeri/react/quote-machine/src/App.js"],"names":["React","Component","texts","App","constructor","props","state","quotes","componentDidMount","fetch","then","res","json","data","setState","catch","console","log","render","clickedText","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AAEA,MAAMC,KAAK,GAAG,CACZ,QADY,EAEZ,QAFY,EAGZ,QAHY,EAIZ,QAJY,CAAd;;AAOA,MAAMC,GAAN,SAAkBH,KAAK,CAACC,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG,CAIb;;AAJa,KAAb;AAKD,GAT+B,CAWhC;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADd,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAEM;AAAT,OAAd;AACD,KAJH,EAKGE,KALH,CAKSC,OAAO,CAACC,GALjB;AAOD;;AAGDC,EAAAA,MAAM,GAAG;AAAA,UACCC,WADD,GACiB,KAAKb,KADtB,CACCa,WADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAY,MAAA,SAAS,EAAC,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACwC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADxC,EAEE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAA2B,MAAA,EAAE,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCA,WAAxC,CAAxD,CAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,IAAI,EAAC,0BAAjC;AAA4D,MAAA,EAAE,EAAC,aAA/D;AAA6E,MAAA,KAAK,EAAC,mBAAnF;AAAuG,MAAA,MAAM,EAAC,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,MAAA,EAAE,EAAC,cAA/B;AAA8C,MAAA,KAAK,EAAC,4BAApD;AAAiF,MAAA,MAAM,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,EAAE,EAAC,WAHL;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CALF,CADF,CADF;AAuBD;;AAnD+B;;AAuDlC,eAAejB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nconst texts = [\n  'Text 1',\n  'Text 2',\n  'Text 3',\n  'Text 4'\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quotes: []\n    }\n\n    //this.handleClick= this.handleClick.bind(this);\n  }\n\n  // handleClick = () => {\n  //   this.setState({ quotes: texts[2] });\n  // }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then(res=> res.json())\n      .then((data) => {\n        this.setState({quotes: data})\n      })\n      .catch(console.log)\n\n  }\n\n\n  render() {\n    const { clickedText } = this.state;\n    return (\n      <div className=\"centered\">\n        <div id=\"quote-box\">\n          <blockquote className=\"blockquote text-right\">\n            <i className=\"fas fa-quote-right\"></i><p className=\"mb-0\" id=\"text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n            <footer className=\"blockquote-footer\">Someone famous in <cite title=\"Source Title\" id=\"author\">{clickedText}</cite></footer>\n          </blockquote>\n          <div className=\"buttons\">\n            <a className=\"btn btn-info\" href=\"twitter.com/intent/tweet\" id=\"tweet-quote\" title=\"Tweet this quote!\" target=\"_blank\">\n              <i className=\"fa fa-twitter\"></i>\n            </a>\n            <a className=\"btn btn-info\" id=\"tumblr-quote\" title=\"Post this quote on tumblr!\" target=\"_blank\">\n              <i className=\"fa fa-tumblr\"></i>\n            </a>\n            <button \n              type=\"button\" \n              className=\"btn btn-info\" \n              id=\"new-quote\"\n              onClick={() => this.handleClick()}>New quote</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}